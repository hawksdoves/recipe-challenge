// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RecipeSearch renders children 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Input
    className="recipeSearch"
    icon={
        <Icon
            as="i"
            circular={true}
            inverted={true}
            link={true}
            name="search"
        />
    }
    onChange={undefined}
    placeholder="Recipe Search..."
    type="text"
/>,
  "nodes": Array [
    <Input
      className="recipeSearch"
      icon={
            <Icon
                  as="i"
                  circular={true}
                  inverted={true}
                  link={true}
                  name="search"
            />
      }
      onChange={undefined}
      placeholder="Recipe Search..."
      type="text"
/>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <RecipeSearch
        recipes={
                Array [
                        Object {
                          "id": "1",
                          "ingredients": Array [
                            Object {
                              "name": "steak",
                              "quantity": "3",
                            },
                          ],
                          "name": "steak",
                        },
                        Object {
                          "id": "2",
                          "ingredients": Array [
                            Object {
                              "name": "chicken",
                              "quantity": "2",
                            },
                          ],
                          "name": "chicken",
                        },
                      ]
        }
>
        <List />
</RecipeSearch>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "children": <List />,
          "recipes": Array [
            Object {
              "id": "1",
              "ingredients": Array [
                Object {
                  "name": "steak",
                  "quantity": "3",
                },
              ],
              "name": "steak",
            },
            Object {
              "id": "2",
              "ingredients": Array [
                Object {
                  "name": "chicken",
                  "quantity": "2",
                },
              ],
              "name": "chicken",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Input
          className="recipeSearch"
          icon={
                    <Icon
                              as="i"
                              circular={true}
                              inverted={true}
                              link={true}
                              name="search"
                    />
          }
          onChange={undefined}
          placeholder="Recipe Search..."
          type="text"
/>,
        "_debugID": 2,
        "_renderedOutput": <Input
          className="recipeSearch"
          icon={
                    <Icon
                              as="i"
                              circular={true}
                              inverted={true}
                              link={true}
                              name="search"
                    />
          }
          onChange={undefined}
          placeholder="Recipe Search..."
          type="text"
/>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <RecipeSearch
    recipes={
        Array [
            Object {
              "id": "1",
              "ingredients": Array [
                Object {
                  "name": "steak",
                  "quantity": "3",
                },
              ],
              "name": "steak",
            },
            Object {
              "id": "2",
              "ingredients": Array [
                Object {
                  "name": "chicken",
                  "quantity": "2",
                },
              ],
              "name": "chicken",
            },
          ]
    }
>
    <List />
</RecipeSearch>,
}
`;

exports[`RecipeSearch renders error message if search had no matches 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Input
    className="recipeSearch"
    icon={
        <Icon
            as="i"
            circular={true}
            inverted={true}
            link={true}
            name="search"
        />
    }
    onChange={undefined}
    placeholder="Recipe Search..."
    type="text"
/>,
  "nodes": Array [
    <Input
      className="recipeSearch"
      icon={
            <Icon
                  as="i"
                  circular={true}
                  inverted={true}
                  link={true}
                  name="search"
            />
      }
      onChange={undefined}
      placeholder="Recipe Search..."
      type="text"
/>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <RecipeSearch
        recipes={
                Array [
                        Object {
                          "id": "1",
                          "ingredients": Array [
                            Object {
                              "name": "steak",
                              "quantity": "3",
                            },
                          ],
                          "name": "steak",
                        },
                        Object {
                          "id": "2",
                          "ingredients": Array [
                            Object {
                              "name": "chicken",
                              "quantity": "2",
                            },
                          ],
                          "name": "chicken",
                        },
                      ]
        }
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "recipes": Array [
            Object {
              "id": "1",
              "ingredients": Array [
                Object {
                  "name": "steak",
                  "quantity": "3",
                },
              ],
              "name": "steak",
            },
            Object {
              "id": "2",
              "ingredients": Array [
                Object {
                  "name": "chicken",
                  "quantity": "2",
                },
              ],
              "name": "chicken",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Input
          className="recipeSearch"
          icon={
                    <Icon
                              as="i"
                              circular={true}
                              inverted={true}
                              link={true}
                              name="search"
                    />
          }
          onChange={undefined}
          placeholder="Recipe Search..."
          type="text"
/>,
        "_debugID": 6,
        "_renderedOutput": <Input
          className="recipeSearch"
          icon={
                    <Icon
                              as="i"
                              circular={true}
                              inverted={true}
                              link={true}
                              name="search"
                    />
          }
          onChange={undefined}
          placeholder="Recipe Search..."
          type="text"
/>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <RecipeSearch
    recipes={
        Array [
            Object {
              "id": "1",
              "ingredients": Array [
                Object {
                  "name": "steak",
                  "quantity": "3",
                },
              ],
              "name": "steak",
            },
            Object {
              "id": "2",
              "ingredients": Array [
                Object {
                  "name": "chicken",
                  "quantity": "2",
                },
              ],
              "name": "chicken",
            },
          ]
    }
/>,
}
`;
